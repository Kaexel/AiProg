[PRIMARY]
# 0 for time, 1 for number of rollouts
MCTS_TERMINATING_CONDITION = 1
# Time limit in seconds
MCTS_TIME_LIMIT = 20
# Rollout limit for each simulated game
MCTS_NUM_ROLLOUTS = 1000
NUM_ACTUAL_GAMES = 2
# Max length of replay buffer
RBUF_LENGTH = 1000
# Number of elements to sample from replay buffer for backpropagation
RBUF_NUM_SAMPLE = 160

# 0 for NIM, 1 for OldGold, 2 for Hex
# TODO: implement gamemanager instead of simworld for these
SIM_WORLD_TYPE = 2

[ANET]
LEARNING_RATE = 0.001
# Defines the number of filters per conv layer
# Needs to be a tuple
CONV_LAYERS = (64, 64)
# Defines the number of neurons per dense layer at the end. Last layer will always be dense with neurons=size of board
# Needs to be a tuple
DENSE_LAYERS = (32,)
ACTIVATION_FUNCTION = relu
OPTIMIZER = adam
NUM_CACHED_NETS = 0
# Number of trained nets. Always saves an untrained net prior to first episode.
NUM_GAME_TOURNAMENT = 4

[NIM]
N = 115
K = 23

[OLDGOLD]
BOARD_LENGTH = 4

[HEX]
BOARD_K = 5
